package h1b.app;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;


public class DE {
	public static class DEMapper extends
	Mapper<LongWritable, Text, Text, LongWritable> {

		public void map(LongWritable key, Text value, Context context
        ) throws IOException, InterruptedException {
			String record = value.toString();
			String result = record.replace("    ", "");
			String[] parts = result.split("\\$");
			String year = parts[7];
			String job = parts[4];
			if(job.equalsIgnoreCase("Data Engineer"))
			{
				context.write(new Text(job+","+year), new LongWritable(1));
			}
		}
	}

	public static class DEReducer extends
	Reducer<Text, LongWritable, Text, LongWritable> 
	{
		
		public void reduce(Text key, Iterable<LongWritable> values,
				Context context) throws IOException, InterruptedException 
				{
			long count=0;
			for (LongWritable value : values) {
				count+=value.get();
			}
			context.write(key, new LongWritable(count));
				}
	}
	
	public static void main(String[] args) throws Exception {
		
		Configuration conf = new Configuration();
		Job job = Job.getInstance(conf, "Data Engineer");
	    job.setJarByClass(DE.class);
	    job.setMapperClass(DEMapper.class);
	    job.setReducerClass(DEReducer.class);
	    job.setMapOutputKeyClass(Text.class);
	    job.setMapOutputValueClass(LongWritable.class);
	    job.setOutputKeyClass(Text.class);
	    job.setOutputValueClass(LongWritable.class);
	    FileInputFormat.addInputPath(job, new Path(args[0]));
	    FileOutputFormat.setOutputPath(job, new Path(args[1]));
	    System.exit(job.waitForCompletion(true) ? 0 : 1);
	  }
}
